{"version":3,"sources":["Other/ParalaxSingleton.tsx","Components/ParalaxItem.tsx","Components/ExternalLink.tsx","Pages/Home.tsx","Components/Card.tsx","Components/CardList.tsx","Components/Search.tsx","Other/Constants.ts","MainContainer.tsx","Pages/Projects.tsx","Components/ScrollIndicator.tsx","Pages/UnderConstruction.tsx","Components/If.tsx","Components/ParalaxContainer.tsx","App.js","serviceWorker.js","index.js"],"names":["ParalaxSingleton","state","paralaxLevels","paralaxOffset","x","y","level","offset","currentParalaxOffset","this","setState","offsets","length","Container","ParalaxItem","to","paralax","rightOffset","props","bottomOffset","inversed","className","style","right","bottom","children","React","Component","ExternalLink","target","href","rel","Home","size","strokeWidth","Card","item","imgSrc","Img","variant","src","Body","Title","title","extendedInfo","onClick","routeTo","categories","map","c","Badge","key","Text","description","vidSrc","appSrc","CardList","cards","items","i","toCardItem","columns","CardColumns","CardDeck","Search","InputGroup","Prepend","id","FormControl","aria-label","aria-describedby","onChange","e","value","Constants","FORGE_DESCRIPTION","VAULT_DESCRIPTION","NavQueuePosition","Projects","vaultItems","filter","location","vaultSearchKeyword","keyword","toLowerCase","flatMap","includes","forgeItems","projectToCardItem","cardItem","date","onSearchChanged","val","projects","ScrollIndicator","onMouseOver","mouseOver","onMouseLeave","classNameExtended","position","height","UnderContruction","If","Fragment","condition","Router","base","history","push","path","pop","pathname","MainContainer","projectsPageRef","projectPageElement","stopPropagationFlag","routeToBase","forceUpdate","console","log","onWheel","handleWheelOnHomePage","handleWheelOnProjectsPage","handleWheelOnProjectPage","onScroll","IsProjectPageAtTop","navQueued","Top","IsWheelUp","nativeEvent","deltaY","IsWheelDown","IsWheelLeft","deltaX","Down","None","Up","ReactDOM","findDOMNode","current","scrollTop","createRef","navHovered","pageChanged","process","downQd","upQd","leftQd","Left","UnderConstruction","ref","ParalaxContainer","calculateParalaxOffset","paralaxSingleton","window","innerWidth","innerHeight","mouseX","clientX","mouseY","clientY","setOffsetLevel","onMouseMove","App","Boolean","hostname","match","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.4523079f.chunk.js","sourcesContent":["import  { Container } from 'unstated';\r\n\r\ninterface ParalaxOffset {\r\n    x: number;\r\n    y: number;\r\n}\r\n\r\ninterface ParalaxSingletonState {\r\n    paralaxLevels: number;\r\n    paralaxOffset: ParalaxOffset[];\r\n}\r\n\r\nclass ParalaxSingleton extends Container<ParalaxSingletonState> {\r\n    state = {\r\n        paralaxLevels: 3,\r\n        paralaxOffset: [{x: 0, y: 0}, {x: 0, y: 0}, {x: 0, y: 0}]\r\n    }\r\n\r\n    setOffsetLevel(level: number, offset: ParalaxOffset) {\r\n        var currentParalaxOffset = this.state.paralaxOffset;\r\n        currentParalaxOffset[level] = offset;\r\n        this.setState({paralaxOffset: currentParalaxOffset});\r\n    }\r\n\r\n    setAllOffsetLevels(offsets: ParalaxOffset[]) {\r\n        this.setState({paralaxLevels: offsets.length, paralaxOffset: offsets});\r\n    }\r\n}\r\n\r\nexport default ParalaxSingleton;","import React from 'react';\r\n\r\nimport ParalaxSingleton from '../Other/ParalaxSingleton';\r\n\r\nimport { Subscribe } from 'unstated';\r\n\r\ninterface ParalaxItemProps {\r\n    level: number;\r\n    inversed?: boolean;\r\n    className?: string;\r\n}\r\n\r\nclass ParalaxItem extends React.Component<ParalaxItemProps> {\r\n\r\n    render() {\r\n        return (\r\n            <Subscribe to={[ParalaxSingleton]}>\r\n            { (paralax: ParalaxSingleton) => {\r\n            \r\n            var rightOffset = paralax.state.paralaxOffset[this.props.level].x;\r\n            var bottomOffset = paralax.state.paralaxOffset[this.props.level].y; \r\n            if (this.props.inversed)\r\n            {\r\n                rightOffset = rightOffset * -1;\r\n                bottomOffset = bottomOffset * -1;\r\n            }\r\n\r\n            return (\r\n                <div className={'paralax-item ' + this.props.className } style={{right: `${rightOffset}px`, bottom: `${bottomOffset}px`}}>\r\n                    {this.props.children}\r\n                </div>\r\n            )}\r\n            }\r\n            </Subscribe>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ParalaxItem;","import React from 'react';\r\n\r\ninterface ExternalLinkProps {\r\n    to: string;\r\n    className?: string;\r\n    children: any;\r\n\r\n}\r\n\r\nfunction ExternalLink(props: ExternalLinkProps) {\r\n    return (<a className={props.className} target='_blank' href={props.to} rel=\"noopener noreferrer\">{props.children}</a>)\r\n}\r\n\r\nexport default ExternalLink;","import React from 'react';\r\n\r\nimport SquareButton from '../Components/SquareButton';\r\nimport ParalaxItem from '../Components/ParalaxItem';\r\nimport ExternalLink from '../Components/ExternalLink';\r\nimport Nav from '../Components/Nav';\r\n\r\nimport { GitHub as GitHubIcon } from 'react-feather';\r\nimport { Linkedin as LinkedinIcon } from 'react-feather';\r\nimport { Mail as EmailIcon } from 'react-feather';\r\n\r\ninterface HomeProps {\r\n    routeTo: (path: string) => void;\r\n}\r\n\r\nclass Home extends React.Component<HomeProps> {\r\n    render() {\r\n        return (\r\n            <div className=\"d-flex flex-column justify-content-between full-width-fill\">\r\n                <div className=\"d-flex align-self-center m-auto z-2\">\r\n                <ParalaxItem level={0} inversed={true}>\r\n                    <h1 className='fullname-header'>Quentin Lautischer</h1>\r\n                </ParalaxItem>\r\n                </div>\r\n                <div className=\"d-flex align-self-center flex-row mb-15\">\r\n                    <ParalaxItem level={0} className=\"pr-5 pl-5 pb-5\">\r\n                        <ExternalLink to='https://www.linkedin.com/in/quentinlautischer/' className=\"linkedin-link\">\r\n                            <LinkedinIcon size={64} strokeWidth={1} />\r\n                        </ExternalLink>\r\n                    </ParalaxItem>\r\n                    <ParalaxItem level={0} className=\"pr-5 pl-5 pb-5\">\r\n                        <ExternalLink to='https://github.com/quentinlautischer' className=\"github-link\">\r\n                            <GitHubIcon size={64} strokeWidth={1} />\r\n                        </ExternalLink>\r\n                    </ParalaxItem>\r\n                    <ParalaxItem level={0} className=\"pr-5 pl-5 pb-5\">\r\n                        <ExternalLink to='mailto:qlautischer@gmail.com' className=\"email-link\">\r\n                            <EmailIcon size={64} strokeWidth={1} />\r\n                        </ExternalLink>\r\n                    </ParalaxItem>\r\n                </div>\r\n            </div>);\r\n    }\r\n}\r\n\r\nexport default Home;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { CardItem } from '../Api';\r\n\r\nimport { Card as BSCard, Badge } from 'react-bootstrap';\r\nimport { Info as InfoIcon } from 'react-feather';\r\n\r\nimport { ArrowUpRight as ArrowUpRightIcon } from 'react-feather';\r\n\r\ninterface CardProps {\r\n    item: CardItem;\r\n    routeTo: (path: string) => void;\r\n}\r\n\r\nclass Card extends React.Component<CardProps> {\r\n    constructor(props: CardProps) {\r\n        super(props);\r\n        \r\n        this.state = {};\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <BSCard>\r\n                { this.props.item.imgSrc &&\r\n                    <BSCard.Img variant=\"top\" src={this.props.item.imgSrc}></BSCard.Img>\r\n                }\r\n                <BSCard.Body>\r\n                    <BSCard.Title>\r\n                        {this.props.item.title}\r\n                        { this.props.item.extendedInfo &&\r\n                            <a onClick={() => this.props.routeTo('/projects/' + this.props.item.title)}>\r\n                                <InfoIcon className='float-right' strokeWidth={1} />\r\n                            </a>\r\n                        }\r\n                    </BSCard.Title>\r\n                    {\r\n                        this.props.item.categories.map(c => {\r\n                            return(<Badge key={c} variant='secondary'>{c}</Badge>);\r\n                        })\r\n                    }\r\n                    <BSCard.Text>\r\n                        {this.props.item.description}\r\n                    </BSCard.Text>\r\n                    { this.props.item.vidSrc &&\r\n                        <Badge className='youtube' variant='secondary'><a href={this.props.item.vidSrc}>View YouTube <ArrowUpRightIcon size={14}/></a></Badge>\r\n                    }\r\n                    { this.props.item.appSrc &&\r\n                        <Badge className='heroku' variant='secondary'><a href={this.props.item.appSrc}>Visit WebApp <ArrowUpRightIcon size={14}/></a></Badge>\r\n                    }\r\n                </BSCard.Body>\r\n            </BSCard>);\r\n    }\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\n\r\nimport { CardItem } from '../Api';\r\nimport Card from '../Components/Card';\r\n\r\nimport { CardDeck, CardColumns } from 'react-bootstrap';\r\n\r\ninterface CardListProps<T> {\r\n    items: T[]\r\n    toCardItem: (arg0: T) => CardItem;\r\n    columns: boolean;\r\n    routeTo: (path: string) => void;\r\n}\r\n\r\nclass CardList<T> extends React.Component<CardListProps<T>> {\r\n\r\n    render() {\r\n        if (this.props.columns) {\r\n            return (<CardColumns>{ this.cards() }</CardColumns>);\r\n        }\r\n        return (<CardDeck>{ this.cards() }</CardDeck>);\r\n    }\r\n\r\n    cards = () => {\r\n        return this.props.items.map(i => {\r\n            let item = this.props.toCardItem(i);\r\n            return (<Card key={item.title} item={item} routeTo={this.props.routeTo} />)\r\n        })\r\n    }\r\n}\r\n\r\nexport default CardList;","import React from 'react';\r\n\r\nimport { InputGroup, FormControl } from 'react-bootstrap';\r\n\r\ninterface SearchProps {\r\n    className: string;\r\n    onChange: (arg0: string | null) => void;\r\n}\r\n\r\nclass Search extends React.Component<SearchProps> {\r\n\r\n    render() {\r\n        return (<InputGroup size=\"sm\" className={`mb-3 ${this.props.className}`}>\r\n            <InputGroup.Prepend>\r\n                <InputGroup.Text id=\"inputGroup-sizing-sm\">Search</InputGroup.Text>\r\n            </InputGroup.Prepend>\r\n            <FormControl \r\n                aria-label=\"Small\" \r\n                aria-describedby=\"search\" \r\n                onChange={ (e: any) => this.props.onChange(e.target.value) } \r\n            />\r\n        </InputGroup>);\r\n    }\r\n}\r\n\r\nexport default Search;","export default class Constants {\r\n    public static FORGE_DESCRIPTION = \"These are projects that I am actively working on.\";\r\n    public static VAULT_DESCRIPTION = \"These are projects that I have archived.\";\r\n}","import React, { SyntheticEvent } from 'react';\r\nimport ReactDOM from 'react-dom';\r\n \r\nimport Home from './Pages/Home';\r\nimport Projects from './Pages/Projects';\r\nimport ScrollIndicator from './Components/ScrollIndicator';\r\nimport UnderConstruction from './Pages/UnderConstruction';\r\n\r\nimport If from './Components/If';\r\n\r\nimport { createBrowserHistory } from 'history';\r\nimport { Container } from 'react-bootstrap';\r\nimport { ArrowUp as ArrowUpIcon } from 'react-feather';\r\nimport { ArrowDown as ArrowDownIcon } from 'react-feather';\r\nimport { ArrowLeft as ArrowLeftIcon } from 'react-feather';\r\n\r\nenum NavQueuePosition {\r\n  None, Up, Down, Left, Top\r\n}\r\n\r\nclass Router {\r\n  history: string[] = [];\r\n\r\n  constructor(base: string) {\r\n    this.history.push(base);\r\n  }\r\n\r\n  push(path: string) {\r\n    this.history.push(path);\r\n  }\r\n\r\n  pop() {\r\n    this.history.pop();\r\n  }\r\n\r\n  location() {\r\n    return {\r\n      pathname: this.history[this.history.length-1]\r\n    }\r\n  }\r\n}\r\n\r\ninterface MainContainerProps {\r\n}\r\n\r\ninterface MainContainerState {\r\n  navHovered: boolean;\r\n  pageChanged: boolean;\r\n  navQueued: NavQueuePosition;\r\n  history: Router;\r\n}\r\n\r\nclass MainContainer extends React.Component<MainContainerProps, MainContainerState> {\r\n    projectsPageRef: any;\r\n    projectPageElement: any;\r\n    stopPropagationFlag: boolean = false;\r\n\r\n    constructor(props: MainContainerProps) {\r\n      super(props);\r\n\r\n      this.projectsPageRef = React.createRef();\r\n\r\n      this.state = { \r\n        navHovered: false, \r\n        pageChanged: false, \r\n        navQueued: NavQueuePosition.Top, \r\n        history: new Router(process.env.PUBLIC_URL),\r\n      }\r\n    }\r\n\r\n    componentDidMount() {\r\n      this.projectPageElement = ReactDOM.findDOMNode(this.projectsPageRef.current) as Element;\r\n    }\r\n\r\n    routeToBase = () => {\r\n      this.state.history.push('');\r\n      this.forceUpdate();\r\n    }\r\n\r\n    routeTo = (path: string) => {\r\n      console.log(\"Routing to: \" + path);\r\n      this.state.history.push(path);\r\n      this.forceUpdate();\r\n    }\r\n  \r\n    render() {\r\n        console.log(\"Rendering: \" + this.state.history.location().pathname)\r\n        const navQueuedClassName = 'nav-queued';\r\n        const downQd = this.state.navQueued === NavQueuePosition.Down;\r\n        const upQd = this.state.navQueued === NavQueuePosition.Up;\r\n        const leftQd = this.state.navQueued === NavQueuePosition.Left;\r\n        \r\n        return (\r\n          <Container className=\"d-flex h-100 full-width-fill background justify-content-center\" onWheel={this.onWheel} onScroll={this.onScroll}>\r\n              <If condition={this.state.history.location().pathname === '/projects/QVision'}>\r\n                <ArrowLeftIcon \r\n                  onClick={() => this.routeTo('/projects')} \r\n                  className={'page-button page-button-left' + (leftQd ? navQueuedClassName : '')}\r\n                  size={leftQd ? 48 : 24}\r\n                />\r\n                <UnderConstruction />\r\n                {/* {<ProjectDetails id=\"qvision\"/>} */}\r\n              </If>\r\n              <If condition={this.state.history.location().pathname === '/projects/TaskT'}>\r\n                  <ArrowLeftIcon onClick={() => this.routeTo('/projects')} className={'page-button page-button-left ' + (leftQd ? navQueuedClassName : '')}\r\n                    size={leftQd ? 48 : 24}\r\n                  />\r\n                  <UnderConstruction />\r\n                  {/* <ProjectDetails id=\"taskt\"/> */}\r\n              </If>\r\n              <If condition={this.state.history.location().pathname === '/projects/Tether'}>\r\n                  <ArrowLeftIcon onClick={() => this.routeTo('/projects')} className={'page-button page-button-left ' + (leftQd ? navQueuedClassName : '')}\r\n                    size={leftQd ? 48 : 24}\r\n                  />\r\n                  <UnderConstruction />\r\n                  {/* {<ProjectDetails id=\"tether\" />} */}\r\n              </If>\r\n              <If condition={this.state.history.location().pathname === '/projects'}>\r\n                <If condition={(this.state.navQueued === NavQueuePosition.Top || this.state.navQueued === NavQueuePosition.Up)}>\r\n                  <ArrowUpIcon \r\n                      onClick={() => this.routeTo('')}\r\n                      className={'page-button page-button-up ' + (upQd ? navQueuedClassName : '')}\r\n                      size={upQd ? 48 : 24}\r\n                  />\r\n                </If>\r\n                <div className='d-flex flex-column'> \r\n                  <div className=\"z-1 h-100 mt-5\">\r\n                    <Projects ref={this.projectsPageRef} routeTo={this.routeTo}/>\r\n                  </div>\r\n                </div>\r\n              </If>\r\n              <If condition={this.state.history.location().pathname === ''}>\r\n                <Home routeTo={this.routeTo} />\r\n                <If condition={!downQd}>\r\n                  <ScrollIndicator size=\"md\" onMouseOver={() => {this.setState({navQueued: NavQueuePosition.Down})}} onMouseLeave={() => {this.setState({navQueued: NavQueuePosition.None})}} />            \r\n                </If>\r\n                <If condition={downQd}>\r\n                  <ScrollIndicator size=\"lg\" onMouseOver={() => {this.setState({navQueued: NavQueuePosition.Down})}} onMouseLeave={() => {this.setState({navQueued: NavQueuePosition.None})}}/>            \r\n                </If>\r\n                {/* <ArrowDownIcon \r\n                  onClick={() => this.routeTo('/projects')} \r\n                  className={'page-button page-button-down ' + (downQd ? navQueuedClassName : '')}\r\n                  size={downQd ? 48 : 24}\r\n                /> */}\r\n              </If>\r\n            </Container>\r\n        );\r\n    }\r\n\r\n    onWheel = (e: SyntheticEvent) => {\r\n      if (this.state.history.location().pathname === ''){\r\n        this.handleWheelOnHomePage(e);\r\n      } else if (this.state.history.location().pathname === '/projects'){\r\n        this.handleWheelOnProjectsPage(e);\r\n      } else if (this.state.history.location().pathname.includes('/projects/')){\r\n        this.handleWheelOnProjectPage(e);\r\n      }\r\n    }\r\n\r\n    onScroll = (e: SyntheticEvent) => {\r\n      if (this.state.history.location().pathname === '/projects'){\r\n        if (this.IsProjectPageAtTop()){\r\n          this.setState({navQueued: NavQueuePosition.Top});\r\n        }\r\n      } \r\n    }\r\n\r\n    IsWheelUp = (e: SyntheticEvent) => {\r\n      return (e.nativeEvent as WheelEvent).deltaY < 0;\r\n    }\r\n\r\n    IsWheelDown = (e: SyntheticEvent) => {\r\n      return (e.nativeEvent as WheelEvent).deltaY > 0;\r\n    }\r\n\r\n    IsWheelLeft = (e: SyntheticEvent) => {\r\n      return (e.nativeEvent as WheelEvent).deltaX < 0;\r\n    }\r\n    \r\n    handleWheelOnHomePage = (e: SyntheticEvent) => {\r\n      if (this.IsWheelDown(e)) {\r\n        if (this.state.navQueued === NavQueuePosition.Down) {\r\n          this.stopPropagationFlag = true;\r\n          this.setState({navQueued: NavQueuePosition.Top})\r\n          this.state.history.push('/projects');\r\n        } \r\n        else if (this.state.navQueued === NavQueuePosition.None) {\r\n          this.setState({navQueued: NavQueuePosition.Down});\r\n        }\r\n        else {\r\n          this.setState({navQueued: NavQueuePosition.None});\r\n        }\r\n      } else if (this.IsWheelUp(e)) {\r\n        this.setState({navQueued: NavQueuePosition.None});\r\n      }\r\n    }\r\n\r\n    handleWheelOnProjectsPage = (e: SyntheticEvent) => {\r\n      // The user has scrolled upwards and we're at the top (is this gonna be difference on mac?)\r\n      if (this.IsWheelUp(e)) {\r\n\r\n        if(!this.IsProjectPageAtTop())\r\n          return;\r\n\r\n        if (this.state.navQueued === NavQueuePosition.Up) {\r\n          // Fire Navigation Event\r\n          this.state.history.push('');\r\n        } \r\n        else if (this.state.navQueued === NavQueuePosition.Top) {\r\n          this.setState({navQueued: NavQueuePosition.Up});\r\n        }\r\n        else {\r\n          this.setState({navQueued: NavQueuePosition.Top});\r\n        }\r\n      } else if (this.IsWheelDown(e)) {\r\n        this.setState({navQueued: NavQueuePosition.None});\r\n      }\r\n    }\r\n\r\n    handleWheelOnProjectPage = (e: SyntheticEvent) => {\r\n      // The user has scrolled left // The Queuing of this nav doesn't feel good so I'll skip the Q\r\n\r\n      // this.setState({navQueued: NavQueuePosition.Left})\r\n      if (this.IsWheelLeft(e)){\r\n        this.state.history.push('/projects');\r\n      }\r\n    }\r\n\r\n    IsProjectPageAtTop = () => {\r\n      this.projectPageElement = ReactDOM.findDOMNode(this.projectsPageRef.current) as Element;\r\n      if (this.projectPageElement == null)\r\n        return false;\r\n\r\n      return this.projectPageElement.scrollTop === 0\r\n    }\r\n}\r\n\r\nexport default MainContainer;\r\n","import React from 'react';\r\n\r\nimport { Project, CardItem } from '../Api';\r\nimport CardList from '../Components/CardList';\r\nimport Search from '../Components/Search';\r\nimport projects from '../Res/projects.json';\r\nimport Constants from '../Other/Constants';\r\n\r\ninterface ProjectsState {\r\n    items: Project[];\r\n    vaultSearchKeyword: string | null;\r\n}\r\n\r\ninterface ProjectsProps {\r\n    routeTo: (path: string) => void;\r\n}\r\n\r\nclass Projects extends React.Component<ProjectsProps, ProjectsState> {\r\n    \r\n    constructor(props: ProjectsProps) {\r\n        super(props);\r\n    \r\n        this.state = {items: projects, vaultSearchKeyword: null};\r\n    }\r\n    \r\n    render() {\r\n        return (<div className=\"projects-page\" >\r\n            <div className=\"projects-container pl-5 pr-5 pb-5\">\r\n                <div>\r\n                <h2 className=\"mt-5\">The Forge</h2>\r\n                <p>{Constants.FORGE_DESCRIPTION}</p>\r\n                </div>\r\n                <CardList items={this.forgeItems()} toCardItem={this.projectToCardItem} columns={false} routeTo={this.props.routeTo} />\r\n\r\n                <h2 className=\"mt-5\">The Vault</h2>\r\n                <div className=\"d-flex flex-row flex-wrap\">\r\n                    <p>{Constants.VAULT_DESCRIPTION}</p>\r\n                    <Search className=\"ml-auto w-35 d-lg\" onChange={this.onSearchChanged}/>\r\n                </div>\r\n                <CardList items={this.vaultItems()} toCardItem={this.projectToCardItem} columns={true} routeTo={this.props.routeTo} />\r\n                <div className=\"d-flex justify-content-center\">\r\n                    <h2 className=\"m-5\">The End</h2>\r\n                </div>\r\n            </div>\r\n        </div>);\r\n    }\r\n\r\n    vaultItems = () : Project[] => {\r\n        let vaultItems = this.state.items.filter(i => i.location === \"vault\");\r\n        \r\n        if (this.state.vaultSearchKeyword) {\r\n            let keyword : string = this.state.vaultSearchKeyword.toLowerCase(); \r\n            vaultItems = vaultItems.filter(i => {\r\n                return i.categories.flatMap(i => i.toLowerCase()).includes(keyword) ||\r\n                i.title.toLowerCase().includes(keyword) || \r\n                i.description.toLowerCase().includes(keyword)\r\n            });\r\n        }\r\n\r\n        return vaultItems;\r\n    }\r\n\r\n    forgeItems = () : Project[] => {\r\n        return this.state.items.filter(i => i.location === \"forge\")\r\n    }\r\n\r\n    projectToCardItem = (item: Project) : CardItem => {\r\n        var cardItem = {\r\n            title: item.title,\r\n            date: item.date,\r\n            categories: item.categories,\r\n            imgSrc: item.imgSrc,\r\n            vidSrc: item.vidSrc,\r\n            appSrc: item.appSrc,\r\n            description: item.description,\r\n        } as CardItem;\r\n\r\n        if (item.extendedInfo || item.extendedInfo === {}) {\r\n            cardItem.extendedInfo = {};\r\n        }\r\n\r\n        return cardItem;\r\n    }\r\n\r\n    onSearchChanged = (val: string | null) => {\r\n       this.setState({vaultSearchKeyword: val});\r\n    }\r\n}\r\n\r\nexport default Projects;","import React from 'react';\r\n\r\ninterface ScrollIndicatorProps {\r\n    size: 'sm' | 'md' | 'lg';\r\n    onMouseOver: () => void;\r\n    onMouseLeave: () => void;\r\n}\r\n\r\ninterface ScrollIndicatorState {\r\n    mouseOver: boolean;\r\n}\r\n\r\nclass ScrollIndicator extends React.Component<ScrollIndicatorProps, ScrollIndicatorState> {\r\n    constructor(props: ScrollIndicatorProps) {\r\n        super(props);\r\n\r\n        this.state = {mouseOver: false};\r\n    }\r\n\r\n    onMouseOver = () => {\r\n        this.setState({mouseOver: true});\r\n        this.props.onMouseOver();\r\n    }\r\n\r\n    onMouseLeave = () => {\r\n        this.setState({mouseOver: false});\r\n        this.props.onMouseLeave();\r\n    }\r\n\r\n    render() {\r\n        let classNameExtended = '';\r\n        if (this.state.mouseOver)\r\n            classNameExtended += ' hovering '\r\n        if (this.props.size == 'lg')\r\n            classNameExtended += ' hovering '\r\n\r\n        return (<div \r\n                    onMouseOver={this.onMouseOver} \r\n                    onMouseLeave={this.onMouseLeave} \r\n                    style={{bottom: 0, position: 'fixed', height: '100px'}}>\r\n            <span className={\"scroll-indicator-text \" + classNameExtended}>SCROLL</span>\r\n            <span className={\"scroll-tail \" + classNameExtended}></span>\r\n        </div>);\r\n    }\r\n}\r\n\r\nexport default ScrollIndicator;","import React from 'react';\r\n\r\nimport { AlertTriangle as AlertTriangleIcon } from 'react-feather';\r\n\r\nclass UnderContruction extends React.Component {\r\n\r\n    render() {\r\n        return (<div className='w-100 d-flex flex-row justify-content-center align-items-center'>\r\n            <AlertTriangleIcon size={64} strokeWidth={1} />\r\n                <h1 className='ml-5 mr-5'>Under Construction</h1>\r\n            <AlertTriangleIcon className='d-lg' size={64} strokeWidth={1} />\r\n        </div>);\r\n    }\r\n}\r\n\r\nexport default UnderContruction;","import React from 'react';\r\n\r\ninterface IfProps {\r\n    condition: boolean;\r\n}\r\n\r\nclass If extends React.Component<IfProps> {\r\n    constructor(props: IfProps) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return (<React.Fragment>\r\n            { this.props.condition &&\r\n                <React.Fragment>\r\n                    {this.props.children}\r\n                </React.Fragment>\r\n            }\r\n        </React.Fragment>);\r\n    }\r\n}\r\n\r\nexport default If;","import React from 'react';\r\n\r\nimport  ParalaxSingleton from '../Other/ParalaxSingleton';\r\n\r\nimport { Provider, Subscribe } from 'unstated';\r\n\r\nclass ParalaxContainer extends React.Component {\r\n    constructor(props: any) {\r\n        super(props);\r\n        \r\n        this.state = {paralaxOffset: '0, 0, 0'};\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Provider>\r\n                <Subscribe to={[ParalaxSingleton]}>\r\n                    { (paralax: ParalaxSingleton) => (\r\n                        <div className='paralax-container' onMouseMove={(e) => \r\n                        {\r\n                            this.calculateParalaxOffset(e, paralax);\r\n                        }} >\r\n                            {this.props.children}\r\n                        </div>\r\n                    )}\r\n                </Subscribe>\r\n            </Provider>\r\n        );\r\n    }\r\n\r\n    calculateParalaxOffset = (e: React.MouseEvent, paralaxSingleton: ParalaxSingleton) => {\r\n\r\n        let x = window.innerWidth/2;\r\n        let y = window.innerHeight/2;\r\n        let mouseX = e.clientX;\r\n        let mouseY = e.clientY;\r\n\r\n        paralaxSingleton.setOffsetLevel(0, {x: (mouseX - x) * 0.01, y: (mouseY - y) * 0.01});\r\n        paralaxSingleton.setOffsetLevel(1, {x: (mouseX - x) * 0.02, y: (mouseY - y) * 0.02});\r\n        paralaxSingleton.setOffsetLevel(2, {x: (mouseX - x) * 0.06, y: (mouseY - y) * 0.03});\r\n    }\r\n}\r\n\r\nexport default ParalaxContainer;","import React from 'react';\n\nimport MainContainer from './MainContainer.tsx';\nimport ParalaxContainer from './Components/ParalaxContainer';\n\nimport './App.scss';\n\nfunction App() {\n  return (\n    <ParalaxContainer className=\"App\">\n        <MainContainer />\n    </ParalaxContainer>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './App.scss';\n\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}