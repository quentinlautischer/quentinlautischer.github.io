{"version":3,"sources":["Other/ParalaxSingleton.tsx","Components/ParalaxItem.tsx","Components/SquareButton.tsx","Components/ExternalLink.tsx","Components/SubNavItem.tsx","Components/Nav.tsx","Pages/Home.tsx","Components/Card.tsx","Components/CardList.tsx","Components/Search.tsx","Other/Constants.ts","MainContainer.tsx","Pages/Projects.tsx","Pages/UnderConstruction.tsx","Components/ParalaxContainer.tsx","App.js","serviceWorker.js","index.js"],"names":["ParalaxSingleton","state","paralaxLevels","paralaxOffset","x","y","level","offset","currentParalaxOffset","this","setState","offsets","length","Container","ParalaxItem","to","paralax","rightOffset","props","bottomOffset","inversed","className","style","right","bottom","children","React","Component","SquareButton","container","assignRef","element","ExternalLink","target","href","rel","SubNavItem","Nav","Navbar","Toggle","aria-controls","Collapse","id","NavItem","Home","size","strokeWidth","Card","item","imgSrc","Img","variant","src","Body","Title","title","extendedInfo","categories","map","c","Badge","key","Text","description","vidSrc","CardList","cards","items","i","toCardItem","columns","CardColumns","CardDeck","Search","InputGroup","Prepend","FormControl","aria-label","aria-describedby","onChange","e","value","Constants","FORGE_DESCRIPTION","VAULT_DESCRIPTION","NavQueuePosition","Projects","vaultItems","filter","location","vaultSearchKeyword","keyword","toLowerCase","flatMap","includes","forgeItems","projectToCardItem","cardItem","date","onSearchChanged","val","projects","UnderContruction","MainContainer","projectsPageRef","projectPageElement","stopPropagationFlag","onWheel","history","pathname","handleWheelOnHomePage","handleWheelOnProjectsPage","handleWheelOnProjectPage","onScroll","IsProjectPageAtTop","navQueued","Top","IsWheelUp","nativeEvent","deltaY","IsWheelDown","IsWheelLeft","deltaX","Down","push","None","Up","ReactDOM","findDOMNode","current","scrollTop","createRef","navHovered","pageChanged","createBrowserHistory","downQd","upQd","leftQd","Left","path","UnderConstruction","exact","ref","ParalaxContainer","calculateParalaxOffset","paralaxSingleton","window","innerWidth","innerHeight","mouseX","clientX","mouseY","clientY","setOffsetLevel","onMouseMove","App","Boolean","hostname","match","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.a91944bd.chunk.js","sourcesContent":["import  { Container } from 'unstated';\r\n\r\ninterface ParalaxOffset {\r\n    x: number;\r\n    y: number;\r\n}\r\n\r\ninterface ParalaxSingletonState {\r\n    paralaxLevels: number;\r\n    paralaxOffset: ParalaxOffset[];\r\n}\r\n\r\nclass ParalaxSingleton extends Container<ParalaxSingletonState> {\r\n    state = {\r\n        paralaxLevels: 3,\r\n        paralaxOffset: [{x: 0, y: 0}, {x: 0, y: 0}, {x: 0, y: 0}]\r\n    }\r\n\r\n    setOffsetLevel(level: number, offset: ParalaxOffset) {\r\n        var currentParalaxOffset = this.state.paralaxOffset;\r\n        currentParalaxOffset[level] = offset;\r\n        this.setState({paralaxOffset: currentParalaxOffset});\r\n    }\r\n\r\n    setAllOffsetLevels(offsets: ParalaxOffset[]) {\r\n        this.setState({paralaxLevels: offsets.length, paralaxOffset: offsets});\r\n    }\r\n}\r\n\r\nexport default ParalaxSingleton;","import React from 'react';\r\n\r\nimport ParalaxSingleton from '../Other/ParalaxSingleton';\r\n\r\nimport { Subscribe } from 'unstated';\r\n\r\ninterface ParalaxItemProps {\r\n    level: number;\r\n    inversed?: boolean;\r\n}\r\n\r\nclass ParalaxItem extends React.Component<ParalaxItemProps> {\r\n\r\n    render() {\r\n        return (\r\n            <Subscribe to={[ParalaxSingleton]}>\r\n            { (paralax: ParalaxSingleton) => {\r\n            \r\n            var rightOffset = paralax.state.paralaxOffset[this.props.level].x;\r\n            var bottomOffset = paralax.state.paralaxOffset[this.props.level].y; \r\n            if (this.props.inversed)\r\n            {\r\n                rightOffset = rightOffset * -1;\r\n                bottomOffset = bottomOffset * -1;\r\n            }\r\n\r\n            return (\r\n                <div className='paralax-item' style={{right: `${rightOffset}px`, bottom: `${bottomOffset}px`}}>\r\n                    {this.props.children}\r\n                </div>\r\n            )}\r\n            }\r\n            </Subscribe>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ParalaxItem;","import React from 'react';\r\n\r\nimport ParalaxItem from './ParalaxItem';\r\n\r\ninterface SquareButtonProps {\r\n    className: string;\r\n}\r\n\r\nclass SquareButton extends React.Component<SquareButtonProps> {\r\n    container = null;\r\n    \r\n    assignRef = (element: any) => {\r\n        this.container = element;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <ParalaxItem level={2}>\r\n                <div className={'square-btn ' + this.props.className}>\r\n                    {this.props.children}\r\n                </div>\r\n            </ParalaxItem>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SquareButton;","import React from 'react';\r\n\r\ninterface ExternalLinkProps {\r\n    to: string;\r\n    children: any;\r\n}\r\n\r\nfunction ExternalLink(props: ExternalLinkProps) {\r\n    return (<a target='_blank' href={props.to} rel=\"noopener noreferrer\">{props.children}</a>)\r\n}\r\n\r\nexport default ExternalLink;","import React from 'react';\r\n\r\ninterface SubNavItemProps {\r\n    className: string;\r\n}\r\n\r\nclass SubNavItem extends React.Component<SubNavItemProps> {\r\n\r\n    render() {\r\n        return (\r\n            <div className={'sub-nav-item ' + this.props.className } >\r\n                { this.props.children }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SubNavItem;","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nimport SubNavItem from '../Components/SubNavItem';\r\nimport ParalaxItem from './ParalaxItem';\r\n\r\nimport { Navbar, NavItem } from 'react-bootstrap';\r\n\r\nclass Nav extends React.Component {\r\n\r\n    render() {\r\n      return (\r\n        <ParalaxItem level={2}>\r\n        <Navbar >\r\n            <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n            <Navbar.Collapse id=\"basic-navbar-nav\"  >\r\n              <div className=\"d-flex flex-column\">\r\n                <NavItem className='grey-box'>\r\n                  <NavLink to=\"/projects\">\r\n                    <p>Projects</p>\r\n                  </NavLink>\r\n                </NavItem>\r\n                <SubNavItem className='grey-box align-self-end'>\r\n                  <NavLink to=\"/projects/QVision\">\r\n                    <p>QVision</p>\r\n                  </NavLink>\r\n                </SubNavItem>\r\n                <SubNavItem className='grey-box align-self-end'>\r\n                  <NavLink to=\"/projects/TaskT\">\r\n                    <p>TaskT</p>\r\n                  </NavLink>\r\n                </SubNavItem>\r\n                <SubNavItem className='grey-box align-self-end'>\r\n                  <NavLink to=\"/projects/Tether\">\r\n                    <p>Tether</p>\r\n                  </NavLink>\r\n                </SubNavItem>\r\n              </div>\r\n            </Navbar.Collapse>\r\n          </Navbar>\r\n          </ParalaxItem>);\r\n    }\r\n}\r\n\r\nexport default Nav;","import React from 'react';\r\n\r\nimport SquareButton from '../Components/SquareButton';\r\nimport ParalaxItem from '../Components/ParalaxItem';\r\nimport ExternalLink from '../Components/ExternalLink';\r\nimport Nav from '../Components/Nav';\r\n\r\nimport { GitHub as GitHubIcon } from 'react-feather';\r\nimport { Linkedin as LinkedinIcon } from 'react-feather';\r\nimport { Mail as EmailIcon } from 'react-feather';\r\n\r\nclass Home extends React.Component {\r\n    render() {\r\n        return (\r\n        <div className=\"d-flex align-self-center align-self-center-offset\">\r\n            <div className=\"flex-column\">\r\n            <ParalaxItem level={0} inversed={true}>\r\n                <h1 className='fullname-header'>Quentin Lautischer</h1>\r\n            </ParalaxItem>\r\n\r\n                <div className=\"d-flex flex-row\">\r\n                    <SquareButton className='grey-box'>\r\n                        <ExternalLink to='https://www.linkedin.com/in/quentinlautischer/'>\r\n                            <LinkedinIcon size={64} strokeWidth={1} />\r\n                        </ExternalLink>\r\n                    </SquareButton>\r\n                    <SquareButton className='grey-box'>\r\n                        <ExternalLink to='https://github.com/quentinlautischer'>\r\n                            <GitHubIcon size={64} strokeWidth={1} />\r\n                        </ExternalLink>\r\n                    </SquareButton>\r\n                    <SquareButton className='grey-box'>\r\n                        <ExternalLink to='mailto:qlautischer@gmail.com'>\r\n                            <EmailIcon size={64} strokeWidth={1} />\r\n                        </ExternalLink>\r\n                    </SquareButton>\r\n                </div>\r\n            </div>\r\n            <Nav />\r\n        </div>);\r\n    }\r\n}\r\n\r\nexport default Home;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { CardItem } from '../Api';\r\n\r\nimport { Card as BSCard, Badge } from 'react-bootstrap';\r\nimport { Info as InfoIcon } from 'react-feather';\r\n\r\ninterface CardProps {\r\n    item: CardItem\r\n}\r\n\r\nclass Card extends React.Component<CardProps> {\r\n    constructor(props: CardProps) {\r\n        super(props);\r\n        \r\n        this.state = {};\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <BSCard>\r\n                { this.props.item.imgSrc &&\r\n                    <BSCard.Img variant=\"top\" src={this.props.item.imgSrc}></BSCard.Img>\r\n                }\r\n                <BSCard.Body>\r\n                    <BSCard.Title>\r\n                        {this.props.item.title}\r\n                        { this.props.item.extendedInfo &&\r\n                            <Link to={'/projects/' + this.props.item.title} >\r\n                                <InfoIcon className='float-right' strokeWidth={1} />\r\n                            </Link>\r\n                        }\r\n                    </BSCard.Title>\r\n                    {\r\n                        this.props.item.categories.map(c => {\r\n                            return(<Badge key={c} variant='secondary'>{c}</Badge>);\r\n                        })\r\n                    }\r\n                    <BSCard.Text>\r\n                        {this.props.item.description}\r\n                    </BSCard.Text>\r\n                    { this.props.item.vidSrc &&\r\n                        <Badge className='youtube' variant='secondary'><a href={this.props.item.vidSrc}>YouTube</a></Badge>\r\n                    }\r\n                </BSCard.Body>\r\n            </BSCard>);\r\n    }\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\n\r\nimport { CardItem } from '../Api';\r\nimport Card from '../Components/Card';\r\n\r\nimport { CardDeck, CardColumns } from 'react-bootstrap';\r\n\r\ninterface CardListProps<T> {\r\n    items: T[]\r\n    toCardItem: (arg0: T) => CardItem;\r\n    columns: boolean;\r\n}\r\n\r\nclass CardList<T> extends React.Component<CardListProps<T>> {\r\n\r\n    render() {\r\n        if (this.props.columns) {\r\n            return (<CardColumns>{ this.cards() }</CardColumns>);\r\n        }\r\n        return (<CardDeck>{ this.cards() }</CardDeck>);\r\n    }\r\n\r\n    cards = () => {\r\n        return this.props.items.map(i => {\r\n            let item = this.props.toCardItem(i);\r\n            return (<Card key={item.title} item={item} />)\r\n        })\r\n    }\r\n}\r\n\r\nexport default CardList;","import React from 'react';\r\n\r\nimport { InputGroup, FormControl } from 'react-bootstrap';\r\n\r\ninterface SearchProps {\r\n    className: string;\r\n    onChange: (arg0: string | null) => void;\r\n}\r\n\r\nclass Search extends React.Component<SearchProps> {\r\n\r\n    render() {\r\n        return (<InputGroup size=\"sm\" className={`mb-3 ${this.props.className}`}>\r\n            <InputGroup.Prepend>\r\n                <InputGroup.Text id=\"inputGroup-sizing-sm\">Search</InputGroup.Text>\r\n            </InputGroup.Prepend>\r\n            <FormControl \r\n                aria-label=\"Small\" \r\n                aria-describedby=\"search\" \r\n                onChange={ (e: any) => this.props.onChange(e.target.value) } \r\n            />\r\n        </InputGroup>);\r\n    }\r\n}\r\n\r\nexport default Search;","export default class Constants {\r\n    public static FORGE_DESCRIPTION = \"These are projects that I am actively working on.\";\r\n    public static VAULT_DESCRIPTION = \"These are projects that I have archived.\";\r\n}","import React, { SyntheticEvent } from 'react';\r\nimport { Router, Switch, Route, Link } from 'react-router-dom';\r\nimport ReactDOM from 'react-dom';\r\n \r\nimport Home from './Pages/Home';\r\nimport Projects from './Pages/Projects';\r\nimport UnderConstruction from './Pages/UnderConstruction';\r\n\r\nimport { createBrowserHistory } from 'history';\r\nimport { Container } from 'react-bootstrap';\r\nimport { ArrowUp as ArrowUpIcon } from 'react-feather';\r\nimport { ArrowDown as ArrowDownIcon } from 'react-feather';\r\nimport { ArrowLeft as ArrowLeftIcon } from 'react-feather';\r\n\r\nenum NavQueuePosition {\r\n  None, Up, Down, Left, Top\r\n}\r\n\r\ninterface MainContainerState {\r\n  navHovered: boolean;\r\n  pageChanged: boolean;\r\n  navQueued: NavQueuePosition;\r\n  history: any;\r\n}\r\n\r\ninterface MainContainerProps {\r\n  history: any;\r\n}\r\n\r\nclass MainContainer extends React.Component<MainContainerProps, MainContainerState> {\r\n    projectsPageRef: any;\r\n    projectPageElement: any;\r\n    stopPropagationFlag: boolean = false;\r\n\r\n    constructor(props: MainContainerProps) {\r\n      super(props);\r\n\r\n      this.projectsPageRef = React.createRef();\r\n\r\n      this.state = {navHovered: false, pageChanged: false, navQueued: NavQueuePosition.Top, history: createBrowserHistory({}) };\r\n    }\r\n\r\n    componentDidMount() {\r\n      this.projectPageElement = ReactDOM.findDOMNode(this.projectsPageRef.current) as Element;\r\n    }\r\n  \r\n    render() {\r\n        const navQueuedClassName = 'nav-queued';\r\n        const downQd = this.state.navQueued === NavQueuePosition.Down;\r\n        const upQd = this.state.navQueued === NavQueuePosition.Up;\r\n        const leftQd = this.state.navQueued === NavQueuePosition.Left;\r\n        \r\n        return (\r\n            <Router history={this.state.history} >\r\n            <Container className=\"d-flex mt-5 h-100\" onWheel={this.onWheel} onScroll={this.onScroll}>\r\n                <Switch>\r\n                <Route path=\"/projects/QVision\">\r\n                  <Link to='/projects'>\r\n                    <ArrowLeftIcon className={'page-button page-button-left' + (leftQd ? navQueuedClassName : '')}\r\n                        size={leftQd ? 48 : 24}\r\n                      />\r\n                  </Link>\r\n                  <UnderConstruction />\r\n                  {/* {<ProjectDetails id=\"qvision\"/>} */}\r\n                </Route>\r\n                <Route path=\"/projects/TaskT\">\r\n                  <Link to='/projects'>\r\n                    <ArrowLeftIcon className={'page-button page-button-left ' + (leftQd ? navQueuedClassName : '')}\r\n                        size={leftQd ? 48 : 24}\r\n                      />\r\n                  </Link>\r\n                  <UnderConstruction />\r\n                  {/* <ProjectDetails id=\"taskt\"/> */}\r\n                </Route>\r\n                <Route path=\"/projects/Tether\">\r\n                  <Link to='/projects'>\r\n                    <ArrowLeftIcon className={'page-button page-button-left ' + (leftQd ? navQueuedClassName : '')}\r\n                        size={leftQd ? 48 : 24}\r\n                      />\r\n                  </Link>\r\n                  <UnderConstruction />\r\n                  {/* {<ProjectDetails id=\"tether\" />} */}\r\n                </Route>\r\n                <Route exact path=\"/projects\">\r\n                  { (this.state.navQueued === NavQueuePosition.Top || this.state.navQueued === NavQueuePosition.Up) &&\r\n                    <Link to='/'>\r\n                      <ArrowUpIcon \r\n                        className={'page-button page-button-up ' + (upQd ? navQueuedClassName : '')}\r\n                        size={upQd ? 48 : 24}\r\n                      />\r\n                    </Link>\r\n                  }\r\n                  <Projects ref={this.projectsPageRef}/>\r\n                </Route>\r\n                <Route exact path=\"/\">\r\n                  <Home />\r\n                  <Link to='/projects'>\r\n                    <ArrowDownIcon  \r\n                      className={'page-button page-button-down ' + (downQd ? navQueuedClassName : '')}\r\n                      size={downQd ? 48 : 24}\r\n                    />\r\n                  </Link>\r\n                </Route>\r\n              </Switch>\r\n              <Route exact path=\"/\">                 \r\n              </Route>\r\n              </Container>\r\n          </Router>\r\n        );\r\n    }\r\n\r\n    onWheel = (e: SyntheticEvent) => {\r\n      if (this.state.history.location.pathname === '/'){\r\n        this.handleWheelOnHomePage(e);\r\n      } else if (this.state.history.location.pathname === '/projects'){\r\n        this.handleWheelOnProjectsPage(e);\r\n      } else if (this.state.history.location.pathname.includes('/projects/')){\r\n        this.handleWheelOnProjectPage(e);\r\n      }\r\n    }\r\n\r\n    onScroll = (e: SyntheticEvent) => {\r\n      if (this.state.history.location.pathname === '/projects'){\r\n        if (this.IsProjectPageAtTop()){\r\n          this.setState({navQueued: NavQueuePosition.Top});\r\n        }\r\n      } \r\n    }\r\n\r\n    IsWheelUp = (e: SyntheticEvent) => {\r\n      return (e.nativeEvent as WheelEvent).deltaY < 0;\r\n    }\r\n\r\n    IsWheelDown = (e: SyntheticEvent) => {\r\n      return (e.nativeEvent as WheelEvent).deltaY > 0;\r\n    }\r\n\r\n    IsWheelLeft = (e: SyntheticEvent) => {\r\n      return (e.nativeEvent as WheelEvent).deltaX < 0;\r\n    }\r\n    \r\n    handleWheelOnHomePage = (e: SyntheticEvent) => {\r\n      if (this.IsWheelDown(e)) {\r\n        if (this.state.navQueued === NavQueuePosition.Down) {\r\n          this.stopPropagationFlag = true;\r\n          this.setState({navQueued: NavQueuePosition.Top})\r\n          this.state.history.push('/projects');\r\n        } \r\n        else if (this.state.navQueued === NavQueuePosition.None) {\r\n          this.setState({navQueued: NavQueuePosition.Down});\r\n        }\r\n        else {\r\n          this.setState({navQueued: NavQueuePosition.None});\r\n        }\r\n      } else if (this.IsWheelUp(e)) {\r\n        this.setState({navQueued: NavQueuePosition.None});\r\n      }\r\n    }\r\n\r\n    handleWheelOnProjectsPage = (e: SyntheticEvent) => {\r\n      // The user has scrolled upwards and we're at the top (is this gonna be difference on mac?)\r\n      if (this.IsWheelUp(e)) {\r\n\r\n        if(!this.IsProjectPageAtTop())\r\n          return;\r\n\r\n        if (this.state.navQueued === NavQueuePosition.Up) {\r\n          // Fire Navigation Event\r\n          this.state.history.push('/');\r\n        } \r\n        else if (this.state.navQueued === NavQueuePosition.Top) {\r\n          this.setState({navQueued: NavQueuePosition.Up});\r\n        }\r\n        else {\r\n          this.setState({navQueued: NavQueuePosition.Top});\r\n        }\r\n      } else if (this.IsWheelDown(e)) {\r\n        this.setState({navQueued: NavQueuePosition.None});\r\n      }\r\n    }\r\n\r\n    handleWheelOnProjectPage = (e: SyntheticEvent) => {\r\n      // The user has scrolled left // The Queuing of this nav doesn't feel good so I'll skip the Q\r\n\r\n      // this.setState({navQueued: NavQueuePosition.Left})\r\n      if (this.IsWheelLeft(e)){\r\n        this.state.history.push('/projects');\r\n      }\r\n    }\r\n\r\n    IsProjectPageAtTop = () => {\r\n      this.projectPageElement = ReactDOM.findDOMNode(this.projectsPageRef.current) as Element;\r\n      if (this.projectPageElement == null)\r\n        return false;\r\n\r\n      return this.projectPageElement.scrollTop === 0\r\n    }\r\n}\r\n\r\nexport default MainContainer;\r\n","import React from 'react';\r\n\r\nimport { Project, CardItem } from '../Api';\r\nimport CardList from '../Components/CardList';\r\nimport Search from '../Components/Search';\r\nimport projects from '../Res/projects.json';\r\nimport Constants from '../Other/Constants';\r\n\r\ninterface ProjectsState {\r\n    items: Project[];\r\n    vaultSearchKeyword: string | null;\r\n}\r\n\r\ninterface ProjectsProps {\r\n}\r\n\r\nclass Projects extends React.Component<ProjectsProps, ProjectsState> {\r\n    \r\n    constructor(props: ProjectsProps) {\r\n        super(props);\r\n    \r\n        this.state = {items: projects, vaultSearchKeyword: null};\r\n    }\r\n    \r\n    render() {\r\n        return (<div className=\"projects-page\" >\r\n            <div className=\"projects-container\">\r\n                <h1>Projects</h1>\r\n                <div>\r\n                <h2 className=\"mt-5\">The Forge</h2>\r\n                <p>{Constants.FORGE_DESCRIPTION}</p>\r\n                </div>\r\n                <CardList items={this.forgeItems()} toCardItem={this.projectToCardItem} columns={false} />\r\n\r\n                <h2 className=\"mt-5\">The Vault</h2>\r\n                <div className=\"d-flex flex-row flex-wrap\">\r\n                    <p>{Constants.VAULT_DESCRIPTION}</p>\r\n                    <Search className=\"ml-auto w-35 d-lg\" onChange={this.onSearchChanged}/>\r\n                </div>\r\n                <CardList items={this.vaultItems()} toCardItem={this.projectToCardItem} columns={true} />\r\n                <div className=\"d-flex justify-content-center\">\r\n                    <h2 className=\"m-5\">The End</h2>\r\n                </div>\r\n            </div>\r\n        </div>);\r\n    }\r\n\r\n    vaultItems = () : Project[] => {\r\n        let vaultItems = this.state.items.filter(i => i.location === \"vault\");\r\n        \r\n        if (this.state.vaultSearchKeyword) {\r\n            let keyword : string = this.state.vaultSearchKeyword.toLowerCase(); \r\n            vaultItems = vaultItems.filter(i => {\r\n                return i.categories.flatMap(i => i.toLowerCase()).includes(keyword) ||\r\n                i.title.toLowerCase().includes(keyword) || \r\n                i.description.toLowerCase().includes(keyword)\r\n            });\r\n        }\r\n\r\n        return vaultItems;\r\n    }\r\n\r\n    forgeItems = () : Project[] => {\r\n        return this.state.items.filter(i => i.location === \"forge\")\r\n    }\r\n\r\n    projectToCardItem = (item: Project) : CardItem => {\r\n        var cardItem = {\r\n            title: item.title,\r\n            date: item.date,\r\n            categories: item.categories,\r\n            imgSrc: item.imgSrc,\r\n            vidSrc: item.vidSrc,\r\n            description: item.description,\r\n        } as CardItem;\r\n\r\n        if (item.extendedInfo || item.extendedInfo === {}) {\r\n            cardItem.extendedInfo = {};\r\n        }\r\n\r\n        return cardItem;\r\n    }\r\n\r\n    onSearchChanged = (val: string | null) => {\r\n       this.setState({vaultSearchKeyword: val});\r\n    }\r\n}\r\n\r\nexport default Projects;","import React from 'react';\r\n\r\nimport { AlertTriangle as AlertTriangleIcon } from 'react-feather';\r\n\r\nclass UnderContruction extends React.Component {\r\n\r\n    render() {\r\n        return (<div className='w-100 d-flex flex-row justify-content-center align-items-center'>\r\n            <AlertTriangleIcon size={64} strokeWidth={1} />\r\n                <h1 className='ml-5 mr-5'>Under Contruction</h1>\r\n            <AlertTriangleIcon className='d-lg' size={64} strokeWidth={1} />\r\n        </div>);\r\n    }\r\n}\r\n\r\nexport default UnderContruction;","import React from 'react';\r\n\r\nimport  ParalaxSingleton from '../Other/ParalaxSingleton';\r\n\r\nimport { Provider, Subscribe } from 'unstated';\r\n\r\nclass ParalaxContainer extends React.Component {\r\n    constructor(props: any) {\r\n        super(props);\r\n        \r\n        this.state = {paralaxOffset: '0, 0, 0'};\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Provider>\r\n                <Subscribe to={[ParalaxSingleton]}>\r\n                    { (paralax: ParalaxSingleton) => (\r\n                        <div className='paralax-container' onMouseMove={(e) => \r\n                        {\r\n                            this.calculateParalaxOffset(e, paralax);\r\n                        }} >\r\n                            {this.props.children}\r\n                        </div>\r\n                    )}\r\n                </Subscribe>\r\n            </Provider>\r\n        );\r\n    }\r\n\r\n    calculateParalaxOffset = (e: React.MouseEvent, paralaxSingleton: ParalaxSingleton) => {\r\n\r\n        let x = window.innerWidth/2;\r\n        let y = window.innerHeight/2;\r\n        let mouseX = e.clientX;\r\n        let mouseY = e.clientY;\r\n\r\n        paralaxSingleton.setOffsetLevel(0, {x: (mouseX - x) * 0.01, y: (mouseY - y) * 0.01});\r\n        paralaxSingleton.setOffsetLevel(1, {x: (mouseX - x) * 0.02, y: (mouseY - y) * 0.02});\r\n        paralaxSingleton.setOffsetLevel(2, {x: (mouseX - x) * 0.06, y: (mouseY - y) * 0.03});\r\n    }\r\n}\r\n\r\nexport default ParalaxContainer;","import React from 'react';\n\nimport MainContainer from './MainContainer.tsx';\nimport ParalaxContainer from './Components/ParalaxContainer';\n\nimport './App.scss';\n\nfunction App() {\n  return (\n    <ParalaxContainer className=\"App\">\n        <MainContainer />\n    </ParalaxContainer>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './App.scss';\n\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}